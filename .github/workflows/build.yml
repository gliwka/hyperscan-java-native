name: build
on: [push, pull_request]
env:
  OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}
jobs:
  create-staging-repo:
    env:
      STAGING: true
    name: Create staging repository
    runs-on: ubuntu-latest
    outputs:
      staging-repo: ${{ steps.create-repo.outputs.repo }}
    steps:
    - uses: actions/checkout@v2
    - id: create-repo
      if: startsWith(github.ref, 'refs/tags/v') == true
      run: "mvn -B --settings mvnsettings.xml nexus-staging:rc-open -DserverId=ossrh -DnexusUrl=https://oss.sonatype.org/ -DstagingProfileId=72c1cc10566951 -DopenedRepositoryMessageFormat='\nrepo=%s' | grep 'repo=' >> $GITHUB_OUTPUT"
  build-native:
    name: Build native libs
    needs: create-staging-repo
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            runner: windows-2019
            shell: msys2 {0}
            platform: windows-x86_64
            jdkArch: x64
          #- os: macos
          #  runner: macos-13
          #  shell: bash
          #  platform: macosx-x86_64
          #  jdkArch: x64
          #- os: macos
          #  runner: macos-13-xlarge
          #  shell: bash
          #  platform: macosx-arm64
          #  jdkArch: aarch64
          #- os: linux
          #  runner: ubuntu-latest
          #  shell: bash
          #  platform: linux-x86_64
          #- os: linux
          #  runner: buildjet-4vcpu-ubuntu-2204-arm
          #  shell: bash
          #  platform: linux-arm64
    env:
      STAGING_REPO: ${{ needs.create-staging-repo.outputs.staging-repo }}
      DETECTED_PLATFORM: ${{ matrix.platform }}
      STAGING: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            curl
            base-devel
            mingw-w64-x86_64-cmake
            mingw-w64-gcc
      - uses: actions/setup-java@v3
        if: matrix.os == 'macos' || matrix.os == 'windows'
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: ${{ matrix.jdkArch }}
      - uses: maxim-lobanov/setup-xcode@v1
        if: matrix.os == 'macos'
        with:
          xcode-version: 14.1
      - name: Set signing keys
        if: startsWith(github.ref, 'refs/tags/v') == true
        run: |
          echo "SIGN_KEY<<EOF" >> $GITHUB_ENV
          echo "${{ secrets.SIGN_KEY }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "SIGN_KEY_PASS=${{ secrets.SIGN_KEY_PASS }}" >> $GITHUB_ENV
      - name: Build native binaries
        run: ./build.sh deploy
        if: matrix.os == 'macos' || matrix.os == 'windows'
      - name: Build native binaries in centos container
        if: matrix.os == 'linux'
        uses: docker://ghcr.io/gliwka/centos7-toolchain:main@sha256:e6cf17223408bb4d1314be547d74b23d04bcf6480d2fe23822fb672a52775f76
        with:
          args: '"./build.sh deploy"'
